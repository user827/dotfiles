#!/bin/sh
set -eu

# hevc has better quality in amd despite the same bitrate with same qp? https://www.tomshardware.com/news/amd-intel-nvidia-video-encoding-performance-quality-tested

# use gpu-screen-recorder instead. It doesn't drop frames and can show the
# cursor.
# rm cap_sys_admin so it requires sudo instead

# see also https://github.com/russelltg/wl-screenrec

# change xulstore picture-in-picture settings to capture video in firefox in
# original resolution:
# https://www.reddit.com/r/firefox/comments/1dtt4ea/i_want_to_set_the_resolution_of_firefoxs/

. ~/.config/screencap.conf

si=my-sink
if ! pactl list short sinks | grep "$si"; then
  echo loading sink
  pactl load-module module-null-sink media.class=Audio/Sink sink_name="$si" channel_map=stereo
fi
echo "using sink $si"
exec gpu-screen-recorder -w "$1" -f 60 -a my-sink.monitor -k hevc -q ultra -ab 160kbps -o ~/Videos/"video_$(date +"%F %T")".mkv

# about q and qp see -report also that they match
# https://superuser.com/questions/1448982/will-i-get-any-visual-benefit-if-i-use-crf-values-below-17-18-in-x264-ffmpeg

# run with cap_sys_admin

# check vainfo for allowed codecs
# av1 has had bugs
# av1 gives 1082 resolution and bad decoding performance
# h264 gives smaller size and is slower eg better encoding... with vaapi
# prefer hevc gpu encoding over av1 https://www.reddit.com/r/AV1/comments/1jfejji/why_does_hevc_appear_to_be_better_than_av1/
# also works with .ts

# vaapi better than vulkan because vaapi shos in gpu medai usage whereas vulkan
# shows in general usage? bitrate for the same quality also lower
codec=${codec:-h264_vaapi}

# https://wiki.archlinux.org/title/Hardware_video_acceleration
#https://ffmpeg.org/ffmpeg-devices.html#kmsgrab
# https://trac.ffmpeg.org/wiki/Hardware/VAAPI
# https://gist.github.com/Brainiarc7/95c9338a737aa36d9bb2931bed379219
# https://trac.ffmpeg.org/wiki/Capture/PulseAudio
# https://gist.github.com/Brainiarc7/95c9338a737aa36d9bb2931bed379219
# https://trac.ffmpeg.org/wiki/Encode/AV1
# https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/22585/commits
# https://superuser.com/questions/1190153/make-mkv-file-suitable-for-streaming-with-ffmpeg-or-avconv-how-to-move-all-m
# https://gist.github.com/weedz/2717028bacfbdceed6522f3ced707e5f

#https://lists.ffmpeg.org/pipermail/ffmpeg-user/2020-November/050746.html

# needed after kmsgrab?
# -thread_queue_size 4096     \
# -use_wallclock_as_timestamps 1 -fflags +genpts \
# https://news.ycombinator.com/item?id=28622124
# https://sources.debian.org/src/ffmpeg/7%3A5.1.6-0%2Bdeb12u1/libavdevice/kmsgrab.c/
# - has pts = now

# hwdownload example
#https://wiki.tonytascioglu.com/scripts/ffmpeg/kmsgrab_screen_capture

# https://trac.ffmpeg.org/wiki/Encode/HighQualityAudio

# use
# -report switch to see internal recorded to a file
# ffmpeg -h encoder=h264_nvenc
# vainfo, vainfo -a
# pactl list short sinks

# if preview blocks, it block the encoding also

# To use the sink:
# PULSE_SINK=$si app

# todo -ss on .mkv drops frames and has invalid framerate without -r

# https://unix.stackexchange.com/questions/798504/why-must-i-use-scale-vaapi-with-kmsgrab-but-hwupload-with-x11grab-when-using-va

# Use .ts container if wanting to stream the container
# itsoffset so that there is no lag with ffplay preview
# ss to skip the part where audio has began sooner or later
# TODO use -vf 'hwmap=derive_device=vulkan,scale_vulkan=format=nv12' when fixed

# fragmented mp4
# https://stackoverflow.com/questions/8616855/how-to-output-fragmented-mp4-with-ffmpeg
# https://superuser.com/questions/980272/what-movflags-frag-keyframeempty-moov-flag-means/1590691#1590691
# -re ?
# -r allow out of order frames by not dropping any?

# 32bit for audio encoders to use even if they output 16bit
# https://hydrogenaudio.org/index.php/topic,118253.0.html
ffmpeg \
  -xerror -hide_banner \
  -f pulse -ac 2 -acodec pcm_s32le -i "$si".monitor \
  -device /dev/dri/card$displaydevice -framerate 60000/1001 -f kmsgrab -i - \
  -ss 1 -vf 'hwmap=derive_device=vaapi,scale_vaapi=format=nv12' -c:v "$codec" -qp 18 \
  -c:a libopus -b:a 160k \
  -fps_mode vfr \
  "$@"
