#!/bin/sh
set -eu
# Use xset s $time to control the timeout when this will run.
#

[ -f /usr/lib/xsecurelock/saver_display ] || { echo "/usr/lib/xsecurelock/saver_display required" >&2 && exit 1; }
command -v xdotool >/dev/null || { echo "xdotool required" >&2 && exit 1; }
command -v xssstate >/dev/null || { echo "xssstate not installed" >&2 && exit 1 ; }

myname=$(basename "$0")
cmd="$HOME/bin/mylock"
cmdname=$(basename "$cmd")
# sync with mylock
lockfile=${XDG_RUNTIME_DIR:-$HOME}/"$cmdname".${DISPLAY}.lock
beforesaver=60
noticetime=20

exec 6>> "$lockfile"
while flock 6; do
  state=$(xssstate -s)
  if [ "$state" != "disabled" ]; then
    tosleepmsecs=$(xssstate -t)
    tosleep=$((tosleepmsecs / 1000))
    if [ $tosleep -le $beforesaver ]; then
      sh "$cmd" --no-lock
      flock -u 6
      sleep 10
    else
      if [ $tosleep -le $((beforesaver + noticetime)) ]; then
	notify-send -t $(( (tosleep - beforesaver - 3) * 1000 )) "$myname" 'locking soon' || true
	tosleep=$((tosleep - beforesaver))
      else
	tosleep=$((tosleep - beforesaver - noticetime))
      fi
      flock -u 6
      sleep $tosleep
    fi
  else
    flock -u 6
    sleep 10
  fi
done
